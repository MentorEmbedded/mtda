Source: mtda
Section: devel
Priority: extra
Maintainer: Cedric Hombourger <cedric.hombourger@siemens.com>
Build-Depends: debhelper (>=10) | dh-systemd,
               dh-python,
               python3-setuptools,
               python3-all
Standards-Version: 4.5.0 
Homepage: https://github.com/siemens/mtda
X-Python3-Version: >= 3.7

Package: mtda
Architecture: all
Multi-Arch: foreign
Depends: usbrelay, wamerican, ${misc:Depends}, ${python3:Depends}
Description: Multi-Tenant Device Access
 Multi-Tenant Device Access (or MTDA for short) is a relatively
 small Python application and library acting as an interface
 to a test device. It provides mechanisms to remotely turn the
 device on or off (assuming an IP/USB power switch is available),
 plug USB devices in or out (also requiring special hardware) or
 simply access its console (in most cases serial).

Package: mtda-kvm
Architecture: all
Multi-Arch: foreign
Depends: mtda, qemu-kvm
Description: KVM machine managed by MTDA
 Provide a KVM machine with a MTDA interface to control its
 life-cycle and connected devices.

Package: mtda-pytest
Architecture: all
Multi-Arch: foreign
Depends: mtda, python3-pytest
Description: support for pytest code that uses MTDA
 Provide helper classes to write tests with the pytest and MTDA
 frameworks.

Package: mtda-ui
Architecture: all
Multi-Arch: foreign
Depends: mtda, python3-py3qterm, python3-pyqt5.qtmultimedia
Description: a simple user-interface for MTDA
 Provide a simple client-side user-interface to interact with
 devices under test.
