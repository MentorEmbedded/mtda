# ---------------------------------------------------------------------------
# General settings
# ---------------------------------------------------------------------------
[main]
debug = 2

# ---------------------------------------------------------------------------
# Remote settings
# ---------------------------------------------------------------------------
[remote]
control = 5556
console = 5557
host    = localhost

# ---------------------------------------------------------------------------
# Console settings
# ---------------------------------------------------------------------------
[console]
variant=qemu

# ---------------------------------------------------------------------------
# Power Control settings
# ---------------------------------------------------------------------------
[power]
variant=qemu
bios=OVMF.fd
cpu=host
machine=pc
memory=2048
storage=ssd.img

# ---------------------------------------------------------------------------
# SDMUX Control settings
# ---------------------------------------------------------------------------
[sdmux]
variant=qemu
file=usb.img

# ---------------------------------------------------------------------------
# Keyboard settings
# ---------------------------------------------------------------------------
[keyboard]
variant=qemu

# ---------------------------------------------------------------------------
# Scripts to execute on state changes
# ---------------------------------------------------------------------------
[scripts]
power on:
    import time
    target = "HARDDISK"
    if 'boot-from-usb' in env and env['boot-from-usb'] == '1':
    ... target = "USB"
    for i in range(60):
    ... time.sleep(0.5)
    ... mtda.console_send('\x1b')
    ... mtda.console_print('.')
    ... output = mtda.console_flush()
    ... if "Boot Manager" in output:
    ... ... break
    if "Boot Manager" in output:
    ... mtda.console_send('\x1b[B\x1b[B\r')
    ... time.sleep(0.5)
    ... output = ""
    ... mtda.console_clear()
    ... while target not in output:
    ... ... mtda.console_send('\x1b[B')
    ... ... time.sleep(0.5)
    ... ... output = mtda.console_flush()
    ... mtda.console_send('\r')
